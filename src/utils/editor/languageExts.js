export const languageExts = {
  ABAP: [".abap"],
  APL: [".apl"],
  AsteriskDialplan: [".extensions", ".conf"],
  C: [".c"],
  cpp: [".cpp", ".cc", ".cxx"],
  csharp: [".cs"],
  clojure: [".clj"],
  COBOL: [".cob", ".cpy"],
  CoffeeScript: [".coffee"],
  Crystal: [".cr"],
  CSS: [".css"],
  D: [".d"],
  Dart: [".dart"],
  Diff: [".diff"],
  Dockerfile: [".dockerfile"],
  Elixir: [".ex", ".exs"],
  Elm: [".elm"],
  Erlang: [".erl", ".hrl"],
  Fsharp: [".fsi", ".fsx", ".fs", ".ml", ".mli"],
  Fortran: [".f90", ".f95"],
  Go: [".go"],
  GraphQL: [".graphql"],
  Groovy: [".groovy"],
  Handlebars: [".handlebars", ".hbs"],
  Haskell: [".hs"],
  HTML: [".html", ".htm"],
  Java: [".java"],
  JavaScript: [".js"],
  JavaScriptReact: [".jsx"],
  Jinja: [".jinja"],
  JSON: [".json"],
  Julia: [".jl"],
  Kotlin: [".kt", ".kts"],
  Less: [".less"],
  Liquid: [".liquid"],
  Lua: [".lua"],
  Makefile: [".makefile", ".mk", ".mak"],
  Markdown: [".md"],
  MATLAB: [".mat"],
  "Objective-C": [".m"],
  "Objective-Cpp": [".mm"],
  OCaml: [".ml", ".mli"],
  Pascal: [".pas"],
  Perl: [".pl"],
  PHP: [".php"],
  PlainText: [".txt"],
  PowerShell: [".ps1"],
  Prolog: [".pl"],
  Python: [".py"],
  R: [".r"],
  Razor: [".cshtml", ".razor"],
  Ruby: [".rb"],
  Rust: [".rs"],
  SASS: [".sass", ".scss"],
  Scala: [".scala"],
  Scheme: [".scm", ".ss"],
  ShaderLab: [".shader"],
  Shell: [".sh"],
  Solidity: [".sol"],
  SQL: [".sql"],
  Swift: [".swift"],
  TOML: [".toml"],
  TypeScript: [".ts"],
  TypeScriptReact: [".tsx"],
  VB: [".vb"],
  Velocity: [".vm"],
  Verilog: [".v"],
  VHDL: [".vhdl"],
  Vue: [".vue"],
  XML: [".xml"],
  XSL: [".xsl", ".xslt"],
  YAML: [".yaml", ".yml"],
};

export function getLanguage(fileName, languageExts) {
  if (fileName) {
    const extension = fileName.split(".").pop(); // get the file extension
    for (const language in languageExts) {
      if (languageExts[language].includes(`.${extension}`)) {
        return language.toLowerCase();
      }
    }
  }
  return "markdown"; // if the extension is not found in the JSON object, fallback to default syntax highlightning to be markdown
}
